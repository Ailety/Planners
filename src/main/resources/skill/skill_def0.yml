__option__:
  name: '陷阱安置'
  async: true
  bind: true
  level-cap: 10
  natural: true
  natural-level: 1
  upgrade-condition:
    - $: 0
      if: check profile level >= 1
      talk: tell 该技能需要1级才可以学习
    - $: 1
      if: balance has 100
      consume: balance take 100
      placeholder: '金币未满足100({{ balance get }})'
  icon:
    material: WOOD_SWORD
    name: "&e{{ meta skill name }}"
    lore:
      - '§f技能等级 §a{{ meta skill level }}'
      - ''
      - '§f冷却时间 §a{{ scaled lazy cooldown }}'
      - '§f蓝量消耗 §a{{ scaled lazy mp }}'
      - ''
      - '§f安放一个存在§68s§f范围为§64格§f的§e陷阱§f, 该§e陷阱§f会'
      - '§f显形§63s§f, 然后隐藏, 生物踩上后将会引发§c爆'
      - '§c炸&f且造成§6{{ lazy *damage }}§f点伤害.'
      - ''

  variables:
    cooldown: 0
    upgrade-points: 1
    mp: math meta skill level * 2.8
    damage: math meta skill level * 1.2 * lazy base
    base: 10
action: |-
  # mode default
  def main = {
    async {
      invoke spawnEffect
    }
    invoke handleAttack
  }
  def spawnEffect = {
    meta origin to meta executor loc
    for i in range 1 to 3 then {
      effect arc "CLOUD :step 30 :angle 360 :radius 4 :speed 0.0 :count 10 :@origin"
      effect arc "CLOUD :step 30 :angle 360 :radius 3 :speed 0.0 :count 10 :@origin"
      effect arc "CLOUD :step 30 :angle 360 :radius 2 :speed 0.0 :count 10 :@origin"
      effect arc "CLOUD :step 30 :angle 360 :radius 1 :speed 0.0 :count 10 :@origin"
      selector t0 to "@range 4 4 4 @their"
      if check &t0[size] >= 1 then {
        exit success
      }
      sleep 20
    }
  }
  def handleAttack = {
    meta origin to meta executor loc
    set damageEval to lazy *damage
    for i in range 1 to 8 then {
      selector t0 to "@range 4 4 4 @their"
      attack &damageEval they "@range 4 4 4 @their"
      if check &t0[size] >= 1 then {
        explosion 10 they "@origin"
        exit success
      }

      sleep 20
    }
  }