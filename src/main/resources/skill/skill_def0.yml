__option__:
  name: '陷阱安置'
  async: true
  bind: true
  level-cap: 10
  natural: true
  upgrade-condition:
    - $: 0
      if: check profile level >= 1
      talk: tell 该技能需要1级才可以学习
    - $: 1
      if: balance has 100
      consume: balance take 100
      placeholder: '金币未满足100({{ balance get }})'
  icon:
    material: WOODEN_SWORD
    name: "&e{{ meta skill name }}"
    lore:
      - '§f技能等级 §a{{ meta skill level }}'
      - ''
      - '§f冷却时间 §a{{ scaled lazy cooldown }}'
      - '§f蓝量消耗 §a{{ scaled lazy mp }}'
      - ''
      - '§f安放一个存在§68s§f范围为§64格§f的§e陷阱§f, 该§e陷阱§f会'
      - '§f显形§63s§f, 然后隐藏, 生物踩上后将会引发§c爆'
      - '§c炸&f且造成§6{{ lazy *damage }}§f点伤害.'
      - ''

  variables:
    cooldown: 0
    mp: math meta skill level * 2.8
    damage: math meta skill level * 1.2 * lazy base
    base: 10

    when:
      - if: check profile flag xxx == 10
        goto: action

      - if: check profile flag xxxx == 20
        goto: action 1

      - else: action2

action: |-
  set loc0 to meta executor loc
  meta origin to meta executor loc
  async {
    for i in range 1 to 3 then {
        effect arc inline "CLOUD 1 0 1 :step 30 :angle 360 :radius 4 :speed 0.0 :count 10 :@loc {{ &loc0 }}"
        effect arc inline "CLOUD 1 0 1 :step 30 :angle 360 :radius 3 :speed 0.0 :count 10 :@loc {{ &loc0 }}"
        effect arc inline "CLOUD 1 0 1 :step 30 :angle 360 :radius 2 :speed 0.0 :count 10 :@loc {{ &loc0 }}"
        effect arc inline "CLOUD 1 0 1 :step 30 :angle 360 :radius 1 :speed 0.0 :count 10 :@loc {{ &loc0 }}"
        sleep 20
    }
  }
  async {
    set damageEval to lazy *damage
    for i in range 1 to 8 then {
      selector t0 to ":@range 4,4,4 :@their"
      if check selector t0 size >= 1 then {
        attack &damageEval they ":@fetch t0"
        exit success
      }
      sleep 20
    }
  }
  tell math 8 * 20
  sleep math 8 * 20